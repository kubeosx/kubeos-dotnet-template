name: .NET > Build > Test > OpenApi > Docker

on:
  push:
    branches: [main] #dev, staging,
  pull_request:
    branches: [main]

jobs:
  build-test-net:
    # if: github.ref != 'refs/heads/main'
    name: CI
    runs-on: ubuntu-latest   
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore .NET dependencies
        id: dotnetrestore
        working-directory: ./src
        run: dotnet restore

      - if: steps.dotnetrestore.outputs.exit_code == 0
        name: Build .NET 
        id: dotnetbuild 
        working-directory: ./src
        run: dotnet build --no-restore

      - if: steps.dotnetbuild.outputs.exit_code == 0
        id: dotnettest
        name: Run .NET Tests
        working-directory: ./src
        run: dotnet test --no-build --verbosity normal

  generate-openapi-spec:
    #needs: build-test-net
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.*
          
      - name: Install dependencies
        run: dotnet restore
        working-directory: ./src

      - name: Install tools
        working-directory: ./src
        run: dotnet tool restore

      - name: Generate openapi.json
        working-directory: ./src
        run: dotnet nswag run nswag.json

      - name: Upload openapi.json
        uses: actions/upload-artifact@v3
        with:
          name: spec-file
          path: src/openapi.json
          
  update-openapi-spec:
    needs: generate-openapi-spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # with:
        #   persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        #   fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Download openapi.json
        uses: actions/download-artifact@v3
        with:
          name: spec-file
          
      - name: Display structure of downloaded files
        run: ls -R

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: autopr
          author_email: autopr@kubeosx.com
          message: 'Update Open Api Spec'
          add: 'openapi.json'
          
  build-push-container:
    # if: github.ref == 'refs/heads/main'
    needs: build-test-net
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
      - name: docker build
        run: |
          docker build ./src/${{secrets.AppName}}/ -t  ${{secrets.DOCKER_USER}}/${{secrets.AppName}}:${{ github.run_number  }}
      
      - name : docker push
        run: |
          docker push ${{secrets.DOCKER_USER}}/${{secrets.AppName}}:${{ github.run_number  }}
